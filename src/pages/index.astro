---
import Layout from '../layouts/Layout.astro';

const featuredProjects = [
  {
    id: 'pr-times',
    title: 'PR TIMES Auto-Collector',
    image: '/images/pr-times-project.jpg',
    tech: ['Python', 'Playwright/Selenium', 'Regex', 'Google Sheets API'],
    en: 'A script that logs in, searches, extracts contact info, and outputs to Google Sheets. Saves hours every week.',
    jp: '会員ページにログイン→検索→連絡先を抽出→Googleスプレッドシートに出力。毎週の作業時間を大幅に短縮。',
    highlight: 'CSRF/動的DOM対応、誤抽出低減（パターン辞書＋後処理）、重複排除'
  },
  {
    id: 'corporate-site',
    title: 'Mini Corporate Site',
    image: '/images/corporate-site.jpg',
    tech: ['Astro', 'Tailwind', 'Vercel/Cloudflare Pages'],
    en: 'Lightweight, fast, and easy to maintain. Built with Astro + Tailwind.',
    jp: '軽くて速く運用も簡単なコーポレートサイト。Astro + Tailwindで制作。',
    highlight: '高スコアのLighthouse、アクセシビリティ配慮'
  }
];

const hobbyProjects = [
  {
    id: 'cafe',
    title: 'Fictional Café Website',
    image: '/images/cafe-project.jpg',
    en: 'A cozy, minimal design for an imaginary coffee shop.',
    jp: '架空のコーヒーショップのための、落ち着いたミニマルデザイン。'
  },
  {
    id: 'ui-kit',
    title: 'Random UI Kit',
    image: '/images/ui-kit.jpg',
    en: 'Buttons, cards, and layouts — just for fun.',
    jp: 'ボタンやカード、レイアウトなどを集めたUIキット。完全に遊び。'
  },
  {
    id: 'photo',
    title: 'Photo Experiments',
    image: '/images/photo-experiment.jpg',
    en: 'Nature, streets, and anything with good light.',
    jp: '自然や街角、光がきれいなものを撮る実験的な写真。'
  }
];
---

<Layout title="Freshjelly | Fresh Ideas, Solid Builds.">
  <!-- Skip Links for better accessibility -->
  <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded-lg z-50 focus-visible">
    Skip to main content
  </a>
  <a href="#works" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-32 bg-primary-600 text-white px-4 py-2 rounded-lg z-50 focus-visible">
    Skip to works
  </a>

  <main id="main-content" class="min-h-screen">
    
    <!-- Header -->
    <header class="fixed top-0 left-0 right-0 z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700">
      <div class="max-w-6xl mx-auto px-4 py-4 flex justify-between items-center">
        <div class="text-2xl font-bold text-primary-600 dark:text-primary-400">
          <a href="#home" class="hover:text-primary-700 dark:hover:text-primary-300 transition-colors focus-visible">
            Freshjelly
          </a>
        </div>
        
        <nav class="hidden md:flex items-center space-x-8">
          <a href="#works" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors focus-visible">
            Works
          </a>
          <a href="#about" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors focus-visible">
            About
          </a>
          <a href="#contact" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors focus-visible">
            Contact
          </a>
          
          <!-- Dark Mode Toggle -->
          <button
            data-theme-toggle
            onclick="toggleTheme()"
            class="p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus-visible"
            aria-label="Toggle dark mode"
            type="button"
          >
            <svg class="w-5 h-5 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"/>
            </svg>
            <svg class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/>
            </svg>
          </button>
        </nav>
        
        <!-- Mobile Menu Button -->
        <button class="md:hidden p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 focus-visible" aria-label="Open menu">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </header>

    <!-- Hero Section -->
    <section id="home" class="pt-20 pb-20 px-4">
      <div class="max-w-4xl mx-auto text-center">
        <div class="reveal">
          <h1 class="text-5xl md:text-7xl font-bold text-gray-900 dark:text-gray-100 mb-6 leading-tight">
            Fresh Ideas,<br>
            <span class="text-transparent bg-clip-text bg-gradient-to-r from-primary-600 to-secondary-600">
              Solid Builds.
            </span>
          </h1>
        </div>
        
        <div class="reveal">
          <div class="max-w-3xl mx-auto mb-8 space-y-2">
            <p class="text-xl md:text-2xl text-gray-700 dark:text-gray-300" lang="en">
              From web designs to little automation experiments — I create because I can't help it.
            </p>
            <p class="text-lg md:text-xl text-gray-600 dark:text-gray-400" lang="ja">
              （Webデザインから小さな自動化実験まで──楽しくてつい作ってしまうんです。）
            </p>
          </div>
        </div>
        
        <div class="reveal">
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a
              href="#works"
              class="inline-flex items-center justify-center px-8 py-4 text-lg font-semibold text-white bg-primary-600 hover:bg-primary-700 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 focus-visible"
            >
              View My Works
            </a>
            <a
              href="#contact"
              class="inline-flex items-center justify-center px-8 py-4 text-lg font-semibold text-primary-600 dark:text-primary-400 bg-white dark:bg-gray-800 border-2 border-primary-600 dark:border-primary-400 hover:bg-primary-50 dark:hover:bg-gray-700 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 focus-visible"
            >
              Get in Touch
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- About Section -->
    <section id="about" class="py-20 px-4">
      <div class="max-w-4xl mx-auto">
        <div class="reveal">
          <h2 class="text-4xl md:text-5xl font-bold text-center mb-16 text-gray-900 dark:text-gray-100">
            About
          </h2>
        </div>
        
        <div class="bg-white/60 dark:bg-gray-800/60 rounded-2xl p-8 md:p-12 backdrop-blur-sm shadow-xl">
          <div class="reveal">
            <div class="prose prose-lg max-w-none space-y-6">
              <div lang="en" class="text-gray-700 dark:text-gray-300">
                <p class="text-xl leading-relaxed">
                  Hi, I'm <strong class="text-primary-600 dark:text-primary-400">Freshjelly</strong>.
                </p>
                <p class="leading-relaxed">
                  I love turning small sparks of ideas into something you can actually see, click, and use. 
                  Sometimes it's a sleek portfolio site, sometimes it's a bot that quietly gathers data while I'm asleep.
                </p>
              </div>
              
              <div lang="ja" class="text-gray-600 dark:text-gray-400 pt-4 border-t border-gray-200 dark:border-gray-600">
                <p class="leading-relaxed">
                  こんにちは、<strong class="text-primary-600 dark:text-primary-400">Freshjelly</strong>です。
                </p>
                <p class="leading-relaxed">
                  思いついた小さなアイデアを、見て・触って・使える形にするのが好きです。
                  かっこいいポートフォリオを作ることもあれば、寝ている間にこっそりデータを集めてくれるボットを作ることもあります。
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Works Section -->
    <section id="works" class="py-20 px-4">
      <div class="max-w-6xl mx-auto">
        <div class="reveal">
          <h2 class="text-4xl md:text-5xl font-bold text-center mb-16 text-gray-900 dark:text-gray-100">
            Works
          </h2>
        </div>

        <!-- Featured Projects -->
        <div class="mb-20">
          <div class="reveal">
            <h3 class="text-2xl md:text-3xl font-semibold mb-8 text-gray-800 dark:text-gray-200">
              Featured Projects <span class="text-sm font-normal text-gray-500 dark:text-gray-400">（ちょっと本気）</span>
            </h3>
          </div>
          
          <div class="grid md:grid-cols-2 gap-8">
            {featuredProjects.map((project, index) => (
              <div class="reveal bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                </div>
                <div class="p-6">
                  <h4 class="text-xl font-semibold mb-3 text-gray-900 dark:text-gray-100">
                    {project.title}
                  </h4>
                  
                  <div class="space-y-3 mb-4">
                    <p class="text-gray-700 dark:text-gray-300" lang="en">
                      {project.en}
                    </p>
                    <p class="text-gray-600 dark:text-gray-400 text-sm" lang="ja">
                      {project.jp}
                    </p>
                  </div>
                  
                  <div class="mb-4">
                    <p class="text-sm font-medium text-primary-600 dark:text-primary-400 mb-2">Tech Stack:</p>
                    <div class="flex flex-wrap gap-2">
                      {project.tech.map((tech) => (
                        <span class="px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                  
                  <p class="text-sm text-secondary-600 dark:text-secondary-400 font-medium">
                    Point: {project.highlight}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- Hobby Creations -->
        <div>
          <div class="reveal">
            <h3 class="text-2xl md:text-3xl font-semibold mb-8 text-gray-800 dark:text-gray-200">
              Hobby Creations <span class="text-sm font-normal text-gray-500 dark:text-gray-400">（趣味で作ったやつ）</span>
            </h3>
          </div>
          
          <div class="grid md:grid-cols-3 gap-6">
            {hobbyProjects.map((project) => (
              <div class="reveal bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
                <div class="aspect-square overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                </div>
                <div class="p-6">
                  <h4 class="text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100">
                    {project.title}
                  </h4>
                  <div class="space-y-2">
                    <p class="text-gray-700 dark:text-gray-300 text-sm" lang="en">
                      {project.en}
                    </p>
                    <p class="text-gray-600 dark:text-gray-400 text-sm" lang="ja">
                      {project.jp}
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- Skills Section -->
    <section id="skills" class="py-20 px-4 bg-white/30 dark:bg-gray-800/30">
      <div class="max-w-4xl mx-auto">
        <div class="reveal">
          <h2 class="text-4xl md:text-5xl font-bold text-center mb-16 text-gray-900 dark:text-gray-100">
            Skills
          </h2>
        </div>
        
        <div class="grid md:grid-cols-3 gap-8">
          <div class="reveal text-center">
            <div class="w-16 h-16 mx-auto mb-4 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center">
              <svg class="w-8 h-8 text-primary-600 dark:text-primary-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2 text-gray-900 dark:text-gray-100">Web</h3>
            <p class="text-gray-600 dark:text-gray-400 mb-3">
              HTML / CSS / JavaScript / Tailwind / Astro / Next.js
            </p>
          </div>
          
          <div class="reveal text-center">
            <div class="w-16 h-16 mx-auto mb-4 bg-secondary-100 dark:bg-secondary-900 rounded-full flex items-center justify-center">
              <svg class="w-8 h-8 text-secondary-600 dark:text-secondary-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"/>
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2 text-gray-900 dark:text-gray-100">Automation</h3>
            <p class="text-gray-600 dark:text-gray-400 mb-3">
              Python / Playwright / Selenium / Google Sheets API
            </p>
          </div>
          
          <div class="reveal text-center">
            <div class="w-16 h-16 mx-auto mb-4 bg-pink-100 dark:bg-pink-900 rounded-full flex items-center justify-center">
              <svg class="w-8 h-8 text-pink-600 dark:text-pink-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2 text-gray-900 dark:text-gray-100">Design</h3>
            <p class="text-gray-600 dark:text-gray-400 mb-3">
              Figma / Minimal UI / Branding Basics
            </p>
          </div>
        </div>
        
        <div class="reveal text-center mt-8">
          <p class="text-gray-500 dark:text-gray-400">
            <span lang="en">(Mostly self-taught, always learning.)</span> / 
            <span lang="ja">（ほぼ独学。今もずっと勉強中です。）</span>
          </p>
        </div>
      </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="py-20 px-4">
      <div class="max-w-2xl mx-auto">
        <div class="reveal">
          <h2 class="text-4xl md:text-5xl font-bold text-center mb-8 text-gray-900 dark:text-gray-100">
            Contact
          </h2>
        </div>
        
        <div class="reveal">
          <div class="text-center mb-12 space-y-2">
            <p class="text-lg text-gray-700 dark:text-gray-300" lang="en">
              Got an idea or just want to say hi? Drop me a message.
            </p>
            <p class="text-gray-600 dark:text-gray-400" lang="ja">
              「これ作れる？」でも「ちょっと話そう」でも、気軽にどうぞ。
            </p>
          </div>
        </div>
        
        <div class="reveal">
          <form id="contact-form" class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 space-y-6">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Name *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors"
              />
              <div id="name-error" class="text-red-500 text-sm mt-1 hidden"></div>
            </div>
            
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Email *
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors"
              />
              <div id="email-error" class="text-red-500 text-sm mt-1 hidden"></div>
            </div>
            
            <div>
              <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Message *
              </label>
              <textarea
                id="message"
                name="message"
                rows="5"
                required
                class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors resize-vertical"
              ></textarea>
              <div id="message-error" class="text-red-500 text-sm mt-1 hidden"></div>
            </div>
            
            <button
              type="submit"
              class="w-full py-4 px-6 bg-primary-600 hover:bg-primary-700 text-white font-semibold rounded-lg transition-colors duration-200 focus-visible disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <span id="submit-text">Send Message</span>
              <span id="submit-loading" class="hidden">Sending...</span>
            </button>
          </form>
        </div>
        
        <!-- Toast notification -->
        <div id="toast" class="fixed bottom-4 right-4 transform translate-y-full transition-transform duration-300 z-50">
          <div class="bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg">
            <p id="toast-message">Message sent successfully!</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="py-12 px-4 bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700">
      <div class="max-w-4xl mx-auto text-center">
        <div class="reveal">
          <p class="text-gray-600 dark:text-gray-400 mb-2">
            © 2025 Freshjelly — Built with coffee and late-night coding.
          </p>
          <p class="text-sm text-gray-500 dark:text-gray-500" lang="ja">
            （コーヒーと夜更かしコーディングで作られました）
          </p>
        </div>
      </div>
    </footer>
  </main>
</Layout>

<script>
  // Contact form handling
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const toast = document.getElementById('toast') as HTMLElement;
    const toastMessage = document.getElementById('toast-message') as HTMLElement;
    const submitText = document.getElementById('submit-text') as HTMLElement;
    const submitLoading = document.getElementById('submit-loading') as HTMLElement;

    function showToast(message: string, isError = false) {
      toastMessage.textContent = message;
      const toastDiv = toast.firstElementChild as HTMLElement;
      
      if (isError) {
        toastDiv.className = 'bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg';
      } else {
        toastDiv.className = 'bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg';
      }
      
      toast.style.transform = 'translateY(0)';
      
      setTimeout(() => {
        toast.style.transform = 'translateY(100%)';
      }, 3000);
    }

    function validateField(field: HTMLInputElement | HTMLTextAreaElement) {
      const errorDiv = document.getElementById(`${field.name}-error`) as HTMLElement;
      let isValid = true;
      let errorMessage = '';

      if (field.hasAttribute('required') && !field.value.trim()) {
        errorMessage = 'This field is required';
        isValid = false;
      } else if (field.type === 'email' && field.value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(field.value)) {
          errorMessage = 'Please enter a valid email address';
          isValid = false;
        }
      }

      if (!isValid) {
        errorDiv.textContent = errorMessage;
        errorDiv.classList.remove('hidden');
        field.classList.add('border-red-500');
      } else {
        errorDiv.classList.add('hidden');
        field.classList.remove('border-red-500');
      }

      return isValid;
    }

    // Real-time validation
    ['name', 'email', 'message'].forEach(fieldName => {
      const field = document.getElementById(fieldName) as HTMLInputElement | HTMLTextAreaElement;
      field.addEventListener('blur', () => validateField(field));
      field.addEventListener('input', () => {
        if (field.classList.contains('border-red-500')) {
          validateField(field);
        }
      });
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Validate all fields
      const nameField = document.getElementById('name') as HTMLInputElement;
      const emailField = document.getElementById('email') as HTMLInputElement;
      const messageField = document.getElementById('message') as HTMLTextAreaElement;

      const isNameValid = validateField(nameField);
      const isEmailValid = validateField(emailField);
      const isMessageValid = validateField(messageField);

      if (!isNameValid || !isEmailValid || !isMessageValid) {
        showToast('Please fix the errors above', true);
        return;
      }

      // Show loading state
      const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      submitBtn.disabled = true;
      submitText.classList.add('hidden');
      submitLoading.classList.remove('hidden');

      try {
        // Simulate form submission (replace with actual endpoint)
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // For demo purposes, always show success
        // In real implementation, replace this with:
        // const response = await fetch('https://formspree.io/f/YOUR_FORM_ID', {
        //   method: 'POST',
        //   headers: { 'Content-Type': 'application/json' },
        //   body: JSON.stringify({
        //     name: nameField.value,
        //     email: emailField.value,
        //     message: messageField.value
        //   })
        // });

        showToast('Message sent successfully! I\'ll get back to you soon.');
        form.reset();

      } catch (error) {
        showToast('Failed to send message. Please try again.', true);
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        submitText.classList.remove('hidden');
        submitLoading.classList.add('hidden');
      }
    });
  });
</script>